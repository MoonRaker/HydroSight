class model_abstract:
    # Abstract class for creating univariate time series models
        
        [head, colnames, noise] = solve(obj, time_points)
            
        [params_initial, time_points] = calibration_initialise(obj, t_start, t_end)
            
        calibration_finalise(obj, params, useLikelihood)
            
        [objFn, h_star] = objectiveFunction(params, time_points, obj)                
        
        setParameters(obj, params, param_names)
        
        [params, param_names] = getParameters(obj)
        
        [params_upperLimit, params_lowerLimit] = getParameters_physicalLimit(obj)
        
        [params_upperLimit, params_lowerLimit] = getParameters_plausibleLimit(obj)
        
        isValidParameter = getParameterValidity(obj, params, time_points)
